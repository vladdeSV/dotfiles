language en_us
syntax on
filetype plugin indent on
set nocompatible
set encoding=utf-8

let mapleader = ","

" editor general
set mouse=a
set tabstop=8
set softtabstop=2
set shiftwidth=2
set textwidth=0
set expandtab
set number
set numberwidth=4
set scrolloff=3
set nowrap
set smartcase
set hlsearch
set incsearch
set linebreak
set laststatus=2
set statusline=%f%=(%l,%c)
set spelllang=en_us
set whichwrap=bs<>hl[]
set autoindent
" disable "comment continuation" (gets overridden on load, have to resort to this)
autocmd FileType * set formatoptions-=ro
autocmd FileType markdown setlocal spell
autocmd FileType markdown setlocal complete+=kspell
hi LineNr ctermfg=7

" ignore just a q press. h*ck i dislike this command...
map q <Nop>
" yank to clipboard
vnoremap <leader>c "+y

" klog

autocmd BufRead,BufNewFile *.klg set filetype=klog
command! KlogDate call KlogDate()
command! KlogOpenRange call KlogOpenRange()
command! KlogCloseRange call KlogCloseRange()
autocmd FileType klog nnoremap <buffer> KD :call KlogDate()<CR>
autocmd FileType klog nnoremap <buffer> KE :call KlogOpenRange()<CR>
autocmd FileType klog nnoremap <buffer> KC :call KlogCloseRange()<CR>

" plugin
call plug#begin()

Plug 'tpope/vim-sensible'
Plug 'ntpeters/vim-better-whitespace'
Plug 'mhinz/vim-signify'

call plug#end()

" dim highlight of trailing whitespace
highlight ExtraWhitespace ctermbg=7

" diff
highlight SignColumn ctermbg=none
set updatetime=100

function! KlogDate()
  if getline(".") !=# ""
    execute "normal! A\n"
  endif

  execute "normal! A\n" . strftime("%Y-%m-%d") . " (8h!)" . "\n\t08:00 - ? \<Esc>"
endfunction

function KlogDetectIndentation()
  let l:save_pos = getcurpos()
  silent! execute '?^\d\d\d\d-\d\d-\d\d\|^\s*$'

  if getline('.')!~#'^\d\d\d\d-\d\d-\d\d'
    call setpos('.', l:save_pos)
    return ""
  endif

  let l:current_pos = getcurpos()
  for lnum in range(l:current_pos[1], l:save_pos[1])
    let l:line_text = getline(lnum)
    if l:line_text =~# '^\(\t\|    \|  \)'
      call setpos('.', l:save_pos)
      return matchstr(l:line_text, "^\\(\t\\|    \\|  \\)")
    endif
  endfor

  return ""
endfunction

function! KlogOpenRange()
  let l:indentation = KlogDetectIndentation()
  if l:indentation == ""
    echo "klog: can't detect indentation"
    return
  endif

  let l:time = KlogRoundedTimeHalfHour()
  execute "silent! s/\?/" . l:time . "/"
  call append(line('.'), l:indentation . l:time . " - ? ")
  execute "normal! j$\<Esc>"
endfunction

function! KlogRoundedTimeHalfHour()
  let l:hour = str2nr(strftime('%H'))
  let l:min  = str2nr(strftime('%M'))

  if l:min < 15
    let l:min = 0
  elseif l:min < 45
    let l:min = 30
  else
    let l:min = 0
    let l:hour += 1
    if l:hour == 24
      let l:hour = 0
    endif
  endif

  let l:rounded_time = printf('%02d:%02d', l:hour, l:min)
  return l:rounded_time
endfunction

function! KlogCloseRange()
  let l:time = KlogRoundedTimeHalfHour()
  execute "s/\?/" . l:time . "/"
endfunction
